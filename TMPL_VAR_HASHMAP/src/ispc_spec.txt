Consider single-threaded code that looks like this
Consider the following function foo

foo(
  const struct_1_t * const r1,  // read only 
  const struct_3_t * const r2 // read only 
  float * restrict x, // [n] array of size n
  double * restrict y // [n] array of size n
  )
{
  // Let f1, f2 be some functions with no side effects 
  for ( int i = 0; i < n; i++ ) { // totally independent loops 
    x[i] = f1(r1, i); 
    y[i] = f2(x[i], r2, i); 
  }
}

My understanding is that this should be trivial to convert to an ISPC function.  Further, if the functions f1, f2 are mainly straight-line code (no branching), then this should also be quite efficient.

Is that a fair assumption? Or are there other factors I should be considering?
  
