local promote = require 'Q/UTILS/lua/promote'
local qconsts = require 'Q/UTILS/lua/q_consts'
local is_in   = require 'Q/UTILS/lua/is_in'
return function (
  f1type, 
  f2type,
  optargs
  )
  local out_qtype = promote(f1type, f2type)
  local subs = {}; 
  if ( optargs ) then
    out_qtype = optargs.out_qtype or out_qtype
  end
  assert(is_in(out_qtype, { "I1", "I2", "I4", "I8", "F4", "F8" }))

  subs.fn = "<<operator>>_" .. f1type .. "_" .. f2type .. "_" .. out_qtype 
  subs.in1_ctype = qconsts.qtypes[f1type].ctype
  subs.in2_ctype = qconsts.qtypes[f2type].ctype
  subs.out_qtype = out_qtype
  subs.out_ctype = qconsts.qtypes[out_qtype].ctype

  subs.c_code_for_operator = "c = a <<mathsymbol>> b; "
  subs.tmpl   = "OPERATORS/F1F2OPF3/lua/f1f2opf3.tmpl"
  subs.incdir = "OPERATORS/F1F2OPF3/gen_inc/"
  subs.srcdir = "OPERATORS/F1F2OPF3/gen_src/"
  subs.incs = { "OPERATORS/F1F2OPF3/gen_inc/", "UTILS/inc/"}
  return subs
end
