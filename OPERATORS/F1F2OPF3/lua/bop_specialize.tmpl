local lVector = require 'Q/RUNTIME/VCTR/lua/lVector'
local qconsts = require 'Q/UTILS/lua/q_consts'

return function (
  f1, 
  f2
  )
  assert(type(f1) == "lVector")
  assert(type(f2) == "lVector")
  assert(not f1:has_nulls())
  assert(not f2:has_nulls())
  local f1type = f1:qtype()
  local f2type = f2:qtype()
  assert(f1type == "B1", "f1type must be B1")
  assert(f2type == "B1", "f2type must be B1")
  local subs = {} ; 

  subs.fn = "<<operator>>"
  subs.f1_ctype = qconsts.qtypes[f1type].ctype
  subs.f2_ctype = qconsts.qtypes[f2type].ctype
  subs.f3_ctype = "uint64_t"
  subs.f3_qtype = "B1"

  subs.f1_cast_as = subs.f1_ctype .. "*"
  subs.f2_cast_as = subs.f2_ctype .. "*"
  subs.f3_cast_as = subs.f3_ctype .. "*"


  subs.c_code_for_operator = "c = (a <<mathsymbol>> b); "
  subs.tmpl = "OPERATORS/F1F2OPF3/lua/bop.tmpl"
  subs.srcdir = "OPERATORS/F1F2OPF3/gen_src/"
  subs.incdir = "OPERATORS/F1F2OPF3/gen_inc/"
  subs.incs = { "OPERATORS/F1F2OPF3/gen_inc/", "UTILS/inc/"}
  return subs
end
