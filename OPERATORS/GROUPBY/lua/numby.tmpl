return require 'Q/UTILS/lua/code_gen' {

   declaration = [[

#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>
#include "q_macros.h"

//START_FOR_CDEF
extern int ${fn}(
    ${val_ctype} *X, /* [nX] */
    uint32_t nX,
    bool         *cond, /* [nX] */
    ${out_ctype}  *Z, /* [nZ] */
    uint32_t nZ
    );
//STOP_FOR_CDEF
]],
definition = [[
#include "${fn}.h"
int ${fn}(
    ${val_ctype} *X, /* [nX] */
    uint32_t nX,
    bool *cond,
    ${out_ctype}  *Z, /* [nZ] */
    uint32_t nZ
    )
{
  int status = 0;

  if ( nX == 0 ) { WHEREAMI; return -1; }
  if ( nZ == 0 ) { WHEREAMI; return -1; }
  for ( uint64_t i = 0; i < nX; i++ ) {
    ${val_ctype} x = X[i];
    if ( ( cond ) && ( cond[i] == 0 ) ) { continue; }
    ${checking_code}
    Z[x]++;
  }
${bye}
  return status;
}
]]
}
