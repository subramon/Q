return require 'Q/UTILS/lua/code_gen' {

   declaration = [[

#include "q_incs.h"

extern int ${fn}(
    ${in_ctype} *X, /* [nX] */
    uint32_t nX,
    ${out_ctype}  *Z, /* [nZ] */
    uint32_t nZ,
    bool is_safe
    );
    ]],
    definition = [[

#include "_${fn}.h"
int ${fn}(
    ${in_ctype} *X, /* [nX] */
    uint32_t nX,
    ${out_ctype}  *Z, /* [nZ] */
    uint32_t nZ,
    bool is_safe
    )
{
  int status = 0;

  for ( uint64_t i = 0; i < nX; i++ ) {
    ${in_ctype} x = X[i];
    if ( is_safe ) {
      ${checking_code}
    }
    Z[x]++;
  }
${bye}
  return status;
}
]]
}
