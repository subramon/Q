return require 'Q/UTILS/lua/code_gen' {
   declaration = [[
#include <math.h>
#include <omp.h>
#include <stdio.h>
#include <stdbool.h>
#include <stdint.h>
#include <time.h>
#include <string.h>
#include <limits.h>
#include "qtypes.h"
#include "tm2time.h"
#include "q_macros.h"
//START_FOR_CDEF
extern int
${fn}(  
      const ${f1_ctype} * restrict in,  
      uint64_t nR,
      ${f2_ctype} * restrict out
      ) ;
//STOP_FOR_CDEF
;
   ]],
   definition = [[
#include "${fn}.h"
int
${fn}(  
      const ${f1_ctype} * restrict in,
      uint64_t nR,  
      ${f2_ctype} * restrict out
      )
{
  int status = 0;
  // Following needed because we may not always have b for some operations
  // like incr, decr, ....
// TODO #pragma omp parallel for schedule(static, ${chunk_size})
  for ( uint32_t i = 0; i < nR; i++ ) {  
    ${f1_ctype} a = in[i]; 
    ${f2_ctype} c;
    ${code}
    out[i] = c;
  } 
  if ( status < 0 ) { WHEREAMI; }

  return status;
}
   ]]
}
