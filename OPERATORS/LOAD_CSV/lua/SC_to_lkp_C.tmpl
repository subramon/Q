#include "q_incs.h"
#include "q_macros.h"

int 
SC_to_lkp_C_${out_qtype}( 
    char * const in_strs, // [n * width]
    uint32_t n,
    uint32_t width,
    const char ** const lkp,
    ${out_ctype} n_lkp,
    int32_t *outvals // [n]  
    )
{
  int status = 0;
#ifdef DEBUG
  if ( n_lkp == 0 ) { go_BYE(-1); }
  if ( lkp == NULL ) { go_BYE(-1); }
  for ( uint32_t i = 0; i < n_lkp; i++ ) {
    if ( ( lkp[i] == NULL ) || ( lkp[i][0] == '\0' ) ) { go_BYE(-1); }
    for ( uint32_t j = i+1; i < n_lkp; i++ ) {
      if ( strcmp(lkp[i], lkp[j]) == 0 ) { go_BYE(-1); }
    }
  }
#endif
// TODO #pragma omp parallel for schedule(static, 1024)
  for ( uint32_t i = 0; i < n; i++ ) { 
    bool found = false;
    ${out_ctype} l_outval = 0; // 0 => not found 
    for ( uint32_t i = 0; i < n_lkp; i++ ) {
      if ( strcmp(in_strs, lkp[i]) == 0 ) { 
        l_outval = i+1; break;
      }
    }
    outvals[i] = l_outval; 
  }
BYE:
  return status;
}
