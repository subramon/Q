
return require 'Q/UTILS/lua/code_gen' {
  declaration = [[
#include "q_incs.h"
#include "q_macros.h"

    extern int
    ${fn}(
        ${ctype} *in,
        uint32_t n_in,
        ${ctype} *sclrs,
        uint32_t n_sclrs
        bool *out
        );
  ]],
    definition = [[
#include "${fn}.h"
      int
      ${fn}(
          ${ctype} *in,
          uint32_t n_in,
          ${ctype} *sclrs,
          uint32_t n_sclrs
          bool *out
          )
      {
        int status = 0;
        // TODO #pragma omp parallel for 
        for ( uint32_t i = 0; i < n_in; i++ ) { 
          out[i] = false;
          for ( uint32_t j = 0; j < n_sclrs; j++ ) { 
            if ( in[i] == sclrs[j] ) { 
              out[i] = true;
              break;
            }
          }
        }
BYE:
        return status;
      }
  ]],
}
