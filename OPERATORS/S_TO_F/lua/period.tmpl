return require 'Q/UTILS/lua/code_gen' {
   declaration = [[
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include "period_struct.h"

//START_FOR_CDEF
extern int
period_${out_qtype}(
  ${out_ctype} *X,
  uint64_t nX,
  ${args_ctype} *ptr_args,
  uint64_t idx
  );
//STOP_FOR_CDEF
   ]],
   definition = [[
#include "period_${out_qtype}.h"
int
period_${out_qtype}(
  ${out_ctype} *X,
  uint64_t nX,
  ${args_ctype} *ptr_args,
  uint64_t idx
  )
{
  int status = 0;

  ${out_ctype} start = ptr_args->start;
  ${out_ctype} by    = ptr_args->by;
  int         period = ptr_args->period;

  int offset = idx % period;
  ${out_ctype} j = start + (by * ( idx % period));
  for ( uint64_t i = 0; i < nX; i += 1 ) { 
    X[i] = j;
    offset++;
    if ( offset == period ) { 
      offset = 0;
      j = start;
    }
    else {
      j += by;
    }
  }
  return status;
}
]]
}
