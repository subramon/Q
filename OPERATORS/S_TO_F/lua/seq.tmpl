return require 'Q/UTILS/lua/code_gen' {
   declaration = [[
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include "seq_struct.h"
//START_FOR_CDEF
extern int
seq_${out_qtype}(
  ${out_ctype} *X,
  uint64_t nX,
  ${cargs_ctype} *ptr_in,
  uint64_t idx // which element of vector 
  );
//STOP_FOR_CDEF
   ]],

   definition = [[

#include "seq_${out_qtype}.h"
int
seq_${out_qtype}(
  ${out_ctype} *X,
  uint64_t nX,
  ${cargs_ctype} *ptr_in,
  uint64_t idx // which element of vector 
  )
{
  int status = 0;
  ${out_ctype} start = ptr_in->start;
  ${out_ctype} by = ptr_in->by;
  start += (idx *by); // offset based on index
  ${out_ctype} j = start;
  for ( uint64_t i = 0; i < nX; i++ ) { 
    X[i] = (${out_ctype}) j;
    j += by;
  }
  return status;
}
   ]]
}
