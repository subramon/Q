return require 'Q/UTILS/lua/code_gen' {
   declaration = [[
#include "q_incs.h"
extern int
seq_${out_qtype}(
  ${out_ctype} *X,
  uint64_t nX,
  ${arg_ctype} *ptr_in,
  uint64_t idx // which element of vector 
  );
   ]],

   definition = [[

#include "_seq_${out_qtype}.h"

//START_FUNC_DECL
int
seq_${out_qtype}(
  ${out_ctype} *X,
  uint64_t nX,
  ${arg_ctype} *ptr_in,
  uint64_t idx // which element of vector 
  )
//STOP_FUNC_DECL
{
  int status = 0;

  ${out_ctype} start = ptr_in->start;
  ${out_ctype} by = ptr_in->by;

  start += (idx *by); // offset based on index

  if ( by == 0 ) {
    by = (${out_ctype}) 1;
  }

  ${out_ctype} j = start;
  for ( uint64_t i = 0; i < nX; i++ ) { 
    X[i] = (${out_ctype}) j;
    j += by;
  }
  return status;
}

   ]]
}
