local qconsts = require 'Q/UTILS/lua/q_consts'

local function <<operator>>_specialize(val_fldtype, drag_fldtype)
  if ( val_fldtype == "B1" ) then
    assert(nil, "TODO")
  end

  local subs = {}

  local v_qtype = val_fldtype
  local v_ctype = qconsts.qtypes[v_qtype].ctype
  local v_width = qconsts.qtypes[v_qtype].width

  local d_qtype = drag_fldtype
  local d_ctype = qconsts.qtypes[d_qtype].ctype
  local d_width = qconsts.qtypes[d_qtype].width

  local struct_type = "REDUCE_<<operator>>_" .. v_qtype .. "_" .. d_qtype .. "_ARGS"
  subs.v_qtype = v_qtype
  subs.v_ctype = v_ctype
  subs.v_width = v_width
  subs.reduce_v_ctype = v_ctype
  subs.reduce_v_qtype = v_qtype
  subs.reducer_struct_type = struct_type

  subs.d_qtype = d_qtype
  subs.d_ctype = d_ctype
  subs.d_width = d_width
  subs.reduce_d_ctype = d_ctype
  subs.reduce_d_qtype = d_qtype

  local tmpl = qconsts.Q_SRC_ROOT .. "/OPERATORS/GETK/lua/getk.tmpl"
  subs.fn = "<<operator>>_" .. v_qtype .. "_" .. d_qtype
  subs.comparator = "<<comparator>>"
  subs.op = "<<operator>>"

  return subs, tmpl
end
return <<operator>>_specialize
